Java 算法
（1）求1到100以内的所有质数（出现概率35%）。
　　想写好这个算法首先我们需要明确什么是质数。质数定义为：一个大于1的自然数，除了1和它本身外，不能被其他自然数整除。
　　具体代码用 Java 实现如下：
/*求1到100以内的素数（质数）*/public class TestDemo01 { 
   public static void main(String[] args) { 
       int i,j,k = 0; 
       for(i=2;i<100;i++) { 
           j=(int) Math.sqrt(i); //java.lang.Math.sqrt(double a) 返回正确舍入的一个double值的正平方根
           for(j=2;j<=k;j++) {  
              if(i%j==0);  
              break; 
           }           
		if(j>k) {  
              System.out.println(i+""); 
            } 
       }
      //验证上传的内容 
     }
}

斐波那契数列（出现概率为：27%）
确切的说，是考察通项公式的实现方式。即 n 为自然数，则有以下通项公式：
f(0) = 0
f(1) = 1
f(n) = f(n-1)+f(n-2)（其中n为大于等于2的自然数）
具体代码用 Java 实现如下：
/*斐波那契数列*/
public class TestDemo02 { 
   public static void main(String[] args) {
         System.out.println(fib(3));
      } 
     public static int fib(int n){
         int sum = 0;  
         int n1=1; 
         int n2=1;  
         if(n==1||n==2){ 
             sum=1;
          }else{ 
             for(int i=3;i<=n;i++){  
                sum=n1+n2;
                  n2=n1;  
                n1=sum; 
             } 
         } 
         return sum;
      }
}

冒泡排序；
（冒泡排序、快速排序，其中冒泡排序出现概率为：50%）。
　　冒泡排序原理不在解释，直接上源码如下：
public class Test01 { 
   public static void main(String[] args) {
        int arr[] = {5,7,9,4,1}; 
       for (int i = 0; i < arr.length-1; i++) {
//外层控制比较趟数 
           for (int j = 0; j < arr.length-1-i; j++) {
//内层控制每一趟的比较次数
                if (arr[j]>arr[j+1]) {
                    int temp = arr[j]; 
                   arr[j] = arr[j+1]; 
                   arr[j+1] = temp; 
               } 
           } 
       } 
       for (int i = 0; i < arr.length; i++) { 
           System.out.println(arr[i]+"-");  
      } 
   }
}
　　细心的你可能已经发现了考察知识点无外乎两个：
　　1.for 语句的嵌套循环；
　　2.Java 的递归调用。
　　当然，这里我也给出自己的一点建议，当面试官问算法的时候，不会就诚实回答说不会，最起码要让面试官看到自己的态度，千万不要明明不会还要试试，写到一半不知道怎么收场更尴尬！

Java 基础知识
　　当然考察算法只是一部分面试官的做法，但是考察 Java 基础知识则是一个必然的做法。
　　（1）Java 多态性体现在哪里？这个面试题几乎为必考题，所有的面试官考察我 Java 知识的时候都问了这道题，那么给出我的答案就
　　Java 多态体现在两个方面：方法方面和对象方面，方法上体现为重载和覆写，对象上的表现形式为向上转型和向下转型。
　　（2）进程和线程的区别，这个面试题也被问到了不下三次。
　　这个比较有难度了，交给大家一个聪明的做法，当然您是能自行说明白的大神除外，我的回答是这样的：
　　以我们最常用的 QQ 为例，QQ 本身就是一个进程，但是 QQ 里面的文字信息、语音通话、视频等都是一个线程。有进程的情况下才能有线程，回答到这里基本就是合格的。
　　（3）Java 类库
		Collection接口：List接口（使用占比率80%）-> 实现类：ArrayList使用率80%
															Vector
													主要方法：public boolean addAll(Collection<?extends E > c)--追加一个集合
															  public Iterator<E> iterator()--为接口实例化
															  public E get(int index)--取得指定索引编号内容，索引编号从0开始
													特点：List集合的保存数据是按照顺序进行存放的
														  允许有重复数据存在
						Set接口（使用占比20%）-> 实现类：HashSet
														 TreeSet
												 特点：无库存放HashSet，自动排序TreeSet
													   不允许重复
													   没有get方法
						集合输出接口Iterator -> 重要方法：hasNext()
														  next()
												依赖于Collection接口的Iterator()方法
						最大特点：每次只能保存一个对象
		Map接口：实现类：HashMap：特点：HashMap定义的集合是无序存放的
										如果发现重复数据会覆盖旧数据
						 HashTable：特点：无论是key还是Value都允许null
				 主要方法：public V put(K key,V value)--向集合中保存数据
						   public V get(Object key)--根据key找对应value数据
						   public Set<Map.Entry<K.V>>entrySet();--将Map集合转为Set集合
				 集合输出接口Iterator：重要方法
									   依赖于Collection接口的Iterator方法
				 最大特点：保存一对值
				 需要掌握的三行核心代码：//第一步：利用Map接口的entrySet()方法将map集合变为set集合，里面的泛型是Map.Entry
										 Set<Map.Entry<String.Integer>> set = map.entrySet();
										 //利用Set集合的Iterator方法将set集合进行Iterator输出
										 Iterator<Map.Entry<String.Integer>> iter = set.iterator();
										 //每一次Iterator循环取出都是Map.Entry接口对象，利用此对象进行key与value的取出
										 while(iter.hasNext()){
											Map.Entry<String.Integer> me = iter.next();
											System.out.println("key值：" + me.getKey() + "Value值：" + me.getValue());
	4）问到了多线程的两种实现方式，这个问题同样被面试到了两次。
　　实现 Thread 类和实现 Runnable 接口。这里面还被问到了 run() 和 start()的区别。
　　剩下被问到的问题就不是很有代表性了，比如 private 关键字的用法、String 的反转如何实现、常见的数据类型都有哪些、new 出来的对象是保存在堆内存还是栈内存，这些问题不是经常出现，请大家自行充电。

被面试到的 Linux 命令；
（1）查看进程的命令。
ps -ef | grep 进程名
（2）查看端口的命令：
netstat -ntlp   //查看当前所有tcp端口
·netstat -ntulp |grep 80 //查看所有80端口使用情况
·netstat -ntulp | grep 3306   //查看所有3306端口使用情况
（3）查看日志的命令：
tail -f 日志文件名

项目经验是如何被考核的；
	（1）你在整个项目周期中扮演的角色，或者说都干了什么事情。
　　这个问题没有所谓的标准答案，就是考察你在一个项目周期中的角色和任务都是什么，说清楚即可。
　　（2）Bug 的生命周期都有哪些？
　　基本的流程是：创建-开发解决/需求确认-回归-关闭。
　　（3）测试用例的设计方法有哪些？
　　说出边界值、等价类、场景法基本要求，在说出正交矩阵、PICT组合加分。
　　（4）给你一个电梯如何设计测试用例？给你一个 QQ 的登录界面如何设计测试？
　　电梯的那个问题，各位自行发挥吧。QQ 的 Web 界面测试，一定要指出浏览器的兼容性测试、还有缓存 Cookie、Catch的影响，说出这两点，面试官定会对你刮目相看
1.功能：上升、下降、停止、开门、关门、梯内电话、灯光、指示灯等；
2.性能：速度、反应时间、关门时间等；
3.压力：超载、尖锐物碰撞电梯壁等；
4.安全：停电、报警装置、轿箱停靠位置、有人扒门时的情况等；
5.可用性：按键高度、操作是否方便、舒适程度等；
6.UI：美观程度、光滑程度、形状、质感等；
7.稳定性：长时间运行情况等；
8.兼容性：不同电压是否可工作、不同类型电话是否可安装等。
二、下面是详细的测试点：
需求测试： 查看电梯使用说明书、安全说明书等。
界面测试： 查看电梯的外观，电梯的按钮是否好用（开和关按钮设计的图标不容易区分），电梯的说明书是否有错别字。
功能测试：
1.上升键和下降键，测试电梯能否实现正常的上升和下降功能。
2.电梯的按钮是否都可以使用。
3.电梯门的打开，关闭是否正常。
4.报警装置是否安装可用，报警电话是否可用。
5.与其他电梯之间是否协作良好。
6.通风状况如何，是否有手机信号。
7.突然停电时的情况。
8.上升途中、下降途中的响应。
1）电梯本来在1楼，如果有人按15楼，那么电梯在上升到5楼的时候，有人按了10楼，电梯会不会停； 
2）电梯下降到10层时显示满员，此时若5层有人等待电梯，此时还会不会停。 
可靠性： 
1.门关上的一刹那出现障碍物。
2.同时按关门和开门按钮。 
3.点击当前楼层号码
4.多次点击同一楼层号码
5.同时按上键和下键
易用性：电梯的按钮的设计是否符合人的使用习惯
用户文档：使用手册是否对电梯的用法、限制、使用条件等有详细的描述
压力测试：
1.看电梯的最大承重量，在电梯超重时报警装置是否启用
2.在一定时间内不断让电梯上升、下降
稳定性测试：看电梯在最大负载下平稳运行的最长时间

被面试到的 SQL 语句。
建表语句：create table tablename{}。
distinct 关键字的用法。返回重复唯一值
多表查询如何做。
这里重点提一个概念，事务，这个问题的考察达到了80%。

被问到的自动化知识；
testng 的报告输出，这里面涉及的问题既有 testng 整个的实现框架，也会有其细节实现，比如输出报告的样式如何进行格式化@Test相应参数字段；
执行用例时，出现错误，是如何处理的：考察了解图功能的代码实现。

被问到的性能测试知识；
1）性能测试最重要的指标：并发用户数、TPS、正确率、响应时间。
（2）性能测试的监控体系；
监控 Linxu 服务器，推荐回答使用 NMON；
监控数据库资源，必录 Oracle，监控其资源消耗使用 LoadRunner，监控其 SQL 慢查询需要借助工具 DWR；
监控中间件，线程活动数等，需要使用的工具有很多，可以执行储备

被问到的测试用例知识；
（1）请说说纸杯/电梯/qq登录的测试用例
　　这种题注意，尽量多说用例，这是让面试官看到你的思维活跃度高的依据。但是最好能有条理的说出来，而不是想起哪个测试点就说哪个。遇到任何问题都要把大纲先说给或者画给面试官看，然后再从头开始添枝加叶，最后再说一句，因为时间关系，就不继续说了。
　　遇到没头绪的时候不用思考，思考就会冷场，一定要一边开始一遍思考，效果好，所以听完面试官的问题，直接开口说：我先把测试点大纲给你写出来。然后一边写一边就开始构思下一步。
　　我这里可以给出大致大纲：
　　功能/非功能/接口
功能可以分输入/处理/输出
非功能可以分为iso9126的六大特性27自特性来一个一个套
接口分为用户接口/软件接口/硬件接口

终面问题；
（1）假如我是你老家的朋友，现在要来北京玩，你打算怎么安排我
　　这个问题是面试搜狗的时候被最后一面问到的，当时自己答的自认为很好，可是面试官的一句话直接宣告失败。因为我一开始回答，就已经错了。
　　作为一个测试，遇到这个需求，上来就开始写用例（写安排流程）其实是错误的做法。正确的做法是先反问回去你的朋友，你打算什么时候来？早上还是晚上到？做什么交通工具来？哪站到？你以前来过么？你吃东西有忌口么？这次来有特别想去的地方么？什么时候走？想住旅店还是宾馆等等。
　　这叫什么？这就是咱测试在过需求评审的时候，应该对产品经理反问种种细节。而不是埋头直接开干。所以小伙伴们以后面试的时候遇到凡事这类开放性问题，首先要去反思面试官为什么要问这道问题，然后再回答出对方想要的。很显然面试官想看看我作为测试的性格和规范，其次才是我的思路完美与否。

https://mp.weixin.qq.com/s/E43GZ5UX63-wN9Nn2ghZ2w
